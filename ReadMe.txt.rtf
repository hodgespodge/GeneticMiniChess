{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c1\c1;\cssrgb\c100000\c100000\c100000\c0;}
\margl1440\margr1440\vieww18860\viewh14080\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
\
\
\
GeneticAlgorithm.py\
\
To Run: Right click and run the program. This will call the main method which will call the geneticAlgorithm() method. This method takes an initial input file, mutation type, selection type, crossover type mutation rate and a boolean value if testing. The initial input file is if you would like to seed the GA with a specified initial population. The selection, crossover and mutation types are to specify which type of operator to use as we have implemented multiple types. We have it set to default parameters of 
\f1\fs26 \cf2 \cb3 initial_input_file = None, mutation_type = 'swap', selection_type = 'roulette', reproduction_type = 'single_point', mutation_rate = 0.3, is_testing= \'92F\'92. This does not use an initial input file.
\f0\fs24 \cf0 \cb1  The main method will initialize the population and start the GA. When a generation is being evaluated for fitness the matches pairs will print out (solution vs solution) and wether a game has been a draw = D, white won = W or black won = B. Also after the fitness\'92s have been evaluated the fitness dictionary will be printed out so the number of simulated games won per solution can be viewed. This will continue until one of the solutions has met the stopping criteria fitness.\
\
\
GA_Test.py\
\
To Run: Right click and the run program. This will call main() then the init_test() method. This will go through the initializing population function in GeneticAlgorithm.py. This will demonstrate one generation being randomly created and the simulation of the games to demonstrate the fitness\'92s of the solutions being evaluated. The solutions vs solution matches will be printed out solution vs solution) and wether a game has been a draw = D, white won = W or black won = B. Also after the fitness\'92s have been evaluated the fitness dictionary will be printed out so the number of simulated games won per solution can be viewed.\
}